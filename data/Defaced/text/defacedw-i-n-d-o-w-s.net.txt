WINDOWS → What User Manual Software is real. For all indications we are otherwise given, computer sofware arises through the efforts of organisations and management, the orchestration of many hands typing, many neurons absorbing the productive energies of human metabolism, and many hours spent being tutored, or self-tutoring, in the arts of computation. Equally real, actual, and material are the effects of these algorithmic parcels, the labours of distribution and advertising, commerce and marketing and marketeering that help get software into the soiled hands and plebeian hard drives of “users”. We were perhaps never more aware of the efforts and energies that go into software products and services than when these were things that were purchased in storefronts with window dressings, from vendors and salespeople with geo-tractable jobs. Early versions of these things were over-sized, mostly air-filled cardboard boxes, a physical-asynchronous interface between computer user and software producer. As capitalism liquidises itself, will we come to miss the earnestness of these anachronistic, over-the-counter purchases? For software and its distribution, the cycle of design, production, packaging, physical distribution and consummation has now almost entirely disappeared itself behind a curtain of “apps” and “app stores”. Almost. WINDOWS WINDOWS is an invitational installation in the front window of the COMPUTER + SOFTWARE store in Basel. Moritz Greiner-Petter and Jamie Allen asked a set of 16 artists and friends to design a software box for our contemporary digital era. Participating artists include, alphabetically by first name: Aram Bartholl, Benoît Verjat, Bernhard Garnicnig, Ciara Phillips, Constant Dullaart, Evan Roth, Geraldine Juárez, Ishac Bertran, Jan Robert Leegte, Peter Moosgaard, Phillip Stearns, Pussykrew, Rosa Menkman, Sebastian Schmieg, Suzanne Treister, Windows93. The exhibition opens on June 16th, 2017 and runs through the end of that month. An exhibition opening, performance and lecture are taking place on June 16th, in collaboration with Plattfon Stampa, a local record store that offers music and media that falls outside of the mainstream, online at www.plattfon.ch. In 1984, the first software retail store opened in Basel, Switzerland. Now called “COMPUTER + SOFTWARE”, it has offered competent advice and high quality products for well over thirty years. Offering computer software and hardware, the shop also still offers hard-to-find accessories and legacy products, maintaining a product range that dates to the early days of personal computing culture. The location in the area of Basel that baseldeutsch renders us as Glaibasel, or “Little Basel”, is a living archive of disappearing cultures and artefacts of software production, software labour and the material exchange these require and allow. Online, COMPUTER + SOFTWARE maintains a spartan presence at www.computer-software.ch. Boxes of Software There was a time when bandwidth and a lineage of publishing practices meant that in order to purchase software, you went to a bookstore or an office supply shop. There, you would find a helpful clerk — a human being — who would attempt to match your verbally articulated needs with an appropriate application, software product. In ‘shopping around’ in this way, the user or consumer was connected, albeit indirectly, with the industry and labour that lies behind software. Software is distributed, but only via the activities of human beings, and the physical machines and energetic capital they make and activate. Someone makes all this stuff, all these applications, all these tools for reading, accounting, writing, emailing, authoring, tracking, creating. As there are no longer disks or hardware to buy, sell, rent, borrow or exchange anymore — the meatspace of moving bodies and civic engagements in streets, houses, bars, street corners and public spaces finds less and less a part in the culture of software which floats “above it,” where we all, erroneously imagine ‘the cloud’ to reside. Artists like Microradio pioneer Tetsuo Kogawa, and his purposefully short-distance radio broadcast projects proved that technologies of distribution can indeed be used to bring people together. The software box is a similar locus — a boundary object that presences what is exchanged when people put their energies and ideas into the digital language of code. Like microradio is a good excuse for a radio party, software boxes are a good excuse for a software party. They are the demonstration-objects of a domesticated demo-scene, the everyday pedestrian packaging of personal computer clubs. In cultures of contemporary creative production (‘digital art’ and ‘internet art’, as well as their ‘post-’ variants) our links to those that produce platforms and tools of creative production have largely been cleaved. Our ability to maintain an awareness, as artists and audiences, of the industrious individuals and environments which subtend the aesthetic and conceptual potentials of personal, digital, networked and mobile computation is subverted by the ‘one-click’ app download, and the instantaneous, continuous update. ‘Appification’, and with it the economics of ‘plat-forming’ bring about not only a fragmentation of labour and function, but also a flattening and homogenization of all production, artistic creativity included. The app icon as the ‘boiled down’ software box of today is one obvious sign of this harmonising aesthetic monoculture. Artistic interest in the ‘app’ as a reformatting of creative practice has been rendered explicit by projects such as The Imaginary App by Paul D. Miller and Svitlana Matviyenko. As well, post-digital and post-Internet art practices show active interest in the perfidy of materials as exhibition-oriented manifestations of online, digital and software ‘objects’. WINDOWS develops a design-historical connection to the precursors and productive industries of software. In creating comparative disjunctions between current and prior software ‘packaging,’ the product-object aspects of software are brought to the fore. Software, computing platforms, media communications are drawn out of the cloud, and back into the box. The hours of work, and billions of clicks and keytaps, that go into the software that underlies digital culture is disappeared when the ‘product’ is obfuscated beneath a myriad of click-purchased, incremental updates, and service-signups. We no longer exchange capital for labour, we ‘sign up’ for a lifetime of potential associations and bank account seepage. The Adobe Creative Suite (a set of tools through which most art, design and media production flows inevitably seep these days) is no longer available as a single license, but requires subscription and membership — a forced buy-in to software development and update cycle, an ideology, that is as abstract as it is infinite. Meanwhile, behind this system lay an army of engineers and programmers, computer scientists, designers, developers and advertisers. This is to say nothing of the computers, servers and routers machines that also ‘labour’ to host and distribute these codebases, and with which we also now have life-long relations but very little conscious awareness or contact. The shopfront is a login screen, and the economies of digitality lay with the micro-payment and the auto-renewed bank withdrawal; a kind of anti-economy, where exchange itself disappears beneath a cloudy haze; nobody knows what they are working for, or paying for. We buy gas, and we purchase milk… but we “sign up” for software. There have been many attempts, most cumbersome, to return the material to software systems and their use — from the ‘license dongle’ which for a brief period in the 1990s was what granted ‘keyed’ access to expensive software systems; to the numerous attempts by creative coders and digital designers to ‘render media physical,’ by printing out sound files and physically rendering and extruding film frames. In each of these cases, the physical world interrupts (either intentionally or unintentionally) what would otherwise (dis)appear as seamless economic flow. Fragments of functionality and liquid labour vascularise exchange into the unassailable mist of atomised capital. Research “Software Is Something That You Don’t Really See”An interview with Clement Mok Clement Mok, born 1958 in Vancouver, Canada, is a renowned and respected professional graphic designer and author. He is perhaps best known for his work as creative director at Apple during the early 1980s and for his term as national president of the American Institute of Graphic Arts (AIGA). These days, Clement is a founding partner of an ed-tech start-up, LastingLearning.com and is a co-founding and active partner of SUGARFISH, a collection of restaurants by legendary Los Angeles sushi chef Kazunori Nozawa. Between himself and Marty Neumier, Mr. Mok estimates their companies were responsible for about 30% of all Macintosh consumer software packages between 1987-1992. They designed packaging and marketing for MacWrite, MacPaint, Claris, Letraset, MacroMind, amongst many, many others. Special Thanks to Frank Migliorelli, Director of Digital Strategies, at The American Institute of Graphic Arts for helping us get in touch with Clement, and of course to Clement for his time and interest and efforts in elaborating his ideas, reflections, and history in the software development, design and packaging trade. WINDOWS: What is the history of software packaging design? Clement Mok (CM): The original Apple ][ (yes, the Apple II was referenced by two inverted brackets, later by two // slashes) computer was designed for the hobbyist and little or no attention were needed to market. At the very beginning, you had to code your own PC software. Software at that point was primarily a niche market primarily for computer enthusiasts sold primarily through mail order or computer faires. Customers were fine if the software disks came in brown paper envelopes. They could care less. There was no need to market software until VisiCalc came along in 1979 and made personal computer a quasi-consumer product. The software, a spreadsheet program became a very popular program for small businesses and accountants. This made and changed Apple’s fortunes very quickly. This prompted IBM to get into the PC business in 1981 and in so doing it legitimized the market but also changed the dynamics on how software was marketed and distributed. All of a sudden, there were stores that you can walk into to buy a personal computer as well as software. The original IBM PC packaging designed by Vignelli & Associates (see photo above) influenced the early years of software package design. Ashton-Tate’s dBase and Borland’s CP/M OS software and Software Publishing Corp’s Harvard Graphics were the major players during this nascent period of software growth. Software packaging was nothing more than putting labels with the name of the software and a company label on diskettes and manuals. Apple had to up its game. As a scrappy start-up, they had to court software developers to code better features and help them market software to the small business market that was out of the reach of IBM. Hence a parallel design track developed during these early years. While this growth was taking place, the video-game market formed and took-off in 1982 with titles like Atari and Electronic Arts on Commodore 64 consoles. — that market dynamic drove the packaging on a completely different design track. WINDOWS: Has the early history of software design and packaging been overlooked? CM: It has been overlooked, for a handful of reasons. Firstly, as a general rule of thumb, software applications are usually tools and it’s hard to compete with gaming titles. You are more likely to take notice the cover of a novel than a user manual. Secondly, software, at least in the early years, always played second fiddle to hardware. PC’s were the primary driver and the object that got consumer excited. It was viewed as the magic box. People had a tough time differentiating the what a computer does and how software come into play. Thirdly, it wasn’t until the Macintosh (84) with its Graphical User Interface (GUI) and the introduction of Desktop Publishing (85) that the dots connected with a lot of people. Just because you have a computer, it doesn’t mean you can produce nice documents. It requires different software to make graphics and layout. In my opinion, the beginning of the “consumer software industry” really began in 1984 at SoftCon. Up until then consumer software packaging was not taken all that seriously. There was now a market and there was competition. If you looked at packaging during this period, one doesn’t have to do much to get noticed. There were only a handful of players in the space. To develop a brand, all one has to do is to pick a color and used it consistently. For Microsoft it was an evergreen. For Aldus (PageMaker), it was purple blue. It wasn’t until Adobe who got into the consumer software business with Illustrator in 87 that I saw serious attention being paid to the marketing of software. Distinct product identities were being developed for the marketing of software. And, lastly, the dynamics of the software industry changes every 6–12 months. It’s hard to create, sustain a package approach that one can build overtime. WINDOWS: What other design practices are related to software packaging design? CM: The formal precursor for software packaging is closer to a book cover design than it is to album art design in the early years. In part this was a function of the distribution channels. In software stores, they were organized by categories much like a bookstore. Video games software packages drew its early design archetype from movie posters and music album art. As products and distribution merged, so did package designs. For a while, shelve space drove package design and as a result supermarket package tactics came into play. Spine design is every bit as important as what is on the front of the box. Even when CD-ROMs were displacing the need for a larger box, some software publishers kept their software packaging large to justify the higher cost as it would appear the customer is getting more. And during the early and mid-90’s — a period of time where half of all consumer software was sold through catalogs — the design of the boxes needs to work as a postage size graphic. No different than the constraints and requirement of an app icon these days. WINDOWS: What were technical requirements for software boxes and how has this changed over time? CM: The size of these boxes initially was a function of the number of discs and user manual documentation associated with these software. Before the days of CD-ROMs and DVDs, software were distributed in 400K, 800K single or double sided 3.5 inch floppy discs. As I recall the original Adobe Illustrator packaging contained 4 if not 6 floppy discs. It was another 6 or 8 for documentations and add ons. So it’s not unusual to have 20+ discs in the early copies of PageMaker, QuarkExpress or Director. Then there were the user manuals — a quick reference guide that was under 100-page, a reference guide that was between 200–300 pages. With registration cards and other cross-marketing materials, it’s at least 3-inches thick worth of materials — hence the size of the box. There was also this notion that the bigger the box, the more you get and the more it’s worth. This came about in the late 1980s when EggHead and CompuUSA were distributing Mac and Windows software. These were still specialty stores. Size matters when it comes to conveying value. It wasn’t until 1992 or 1993 when CD’s and CD-ROMs were built into most CPU did the size of the box began to shrink. The size of the box was also used as an anti-theft deterrent. It’s much harder to stuff a candy box size software than a shrunk-wrapped CD-jewel-case. During this transition period, product managers had to deal with people who still wanted their user documentation in paper format. Looking for reference information on a disc was still difficult to use. Hence the persistence of large boxes well into the mid and late 90’s. Prior to 1984, IBM software package consists of two if not three linen-finished 3-ring binders. Binders were the format of choice as it was easy to add and update without the need to reprint the entire user manual. As often the case, user documentation does not happen until software code freezes for shipment. They are printed in black and white with little or no consideration on format or audience. These unbound 200-300 page instruction are 3-hole punched and shrunk-wrapped and shipped with the bounder. There are usually sleeves in the binder for 5.25 inch floppies.10-12 disks were not uncommon has these disks holds only 160 KB (single sided) ea. Software during this period of time was sold in box slip-cases, shrunk wrapped and shipped with the CPU. Apple didn’t have the same constraints and requirements as the MS-DOS business world. Instead of 3-ring binders, user manuals were wire-o-bound. The exception was with Lisa when they follow the route of IBM producing their manuals in 3-ring binders. The wire-o-bound format has two advantages. The first was cost. Instead of a slipcase to house the three-ring binder, the wire-0-format was much more cost effective to fabricate and ship. The second was that page insert updates could be done at Apple assembly facilities during the wiro-binding process instead of a shrink-wrapped mailing sent to the user. Apple’s format prevailed and was adopted by the rest of the software industry by the late 1980s. As function of better Graphical User Interfaces (GUIs) which required less explanation, user manuals got thinner over the years. This was true for simple applications. But for application like PageMaker, Quark and Photoshop, size of user manuals were in multiple simply due to feature creep and add-ons. While this was going, non-mac software publishers had to deal with the transition of MS-DOS to Windows. Instead of inventory MS-DOS or Windows version of their software, some shipped both version of their applications in the sample box along with user manuals for both platforms. There was a great deal of waste of unused material. Sizes of boxes didn’t change much over the years as it was driven primarily by distributor and how the boxes display or fit on their shelves. Even when CD-ROM became a standard on CPU’s, many software publishers hedged their bets and continued to produced printed user manuals for their users. CD-ROM user documentation was difficult to access and often very slow. Quick Reference guides were usually printed shipped along with multiple CD’s, including an application installation disk, a disk of tutorial/templates, and a user manual and reference disk. This was during the mid 1990s when online access and the internet was just coming into being. Designing software package for retail really didn’t come into play until the late 80’s when there were retail stores. Hence the early package designs where nothing more than a logo and the name of the software. We pretty much know what happened once people figure out how to download software online. WINDOWS: How did you first get involved in the design of software packaging? CM: I first worked on the original packaging for MacWrite and MacPaint — the software that came bundled with the original 128K Mac. I was part of the original team that launched the Macintosh in 1984. Nothing prepared me for this experience. WINDOWS: What were the early projects that you worked on? CM: Software is something that you don’t really see. It’s something that you experience on this other device call a personal computer. RAM and ROM were something software uses? Or was that hardware? Input to the process? Steve Jobs said, “It’s your job to figure this out. I know it when I see it.” There were no briefs, there was just hanging around enough with the engineers and using the software. The graphical user interface was so different on the Mac that it was important to display that aspect of the software front and center on the box. The fact that it came bundled with the hardware, many of the retail constrains where no present in the first design. MacWrite and MacPaint development 1983 MacWrite and MacPaint packaging final 1984 MacWrite and MacPaint packaging rework 1985 WINDOWS: What were the themes or aesthetics that featured in early software packaging? CM: Since no one knew what a Graphical User Interface is, showing the graphical screen was the main driver for many Apple and Mac software packaging initially (1984-1986). Things started to change in (1987-1990) when the essence of the software application was hard to communicate with a single screen. Claris, an Apple software subsidiary launched in 1988, had to recalibrate and rework their package system once they realized the single screen approach was no longer effective in the marketplace. I took a stab at reworking the system, and Marty Neumier eventually ended up reworking the entire system for Claris in around 1991. A shift was afoot in 1988 when marketers realized they had to do more than putting the name of the software and a screen on the box. Retailers where setting up their stores much like a bookstores and software publishers were looking at different approaches to attract customers. The black and blue boxes were designed by Apple’s Creative Service team.I had left Apple when this design was finalized. When Apple acquired AppleWorks for Claris, I moved them away from using the screen grab approach to an editorial approach using illustration to articulate the benefits. Macromind Director design by Clement Mok designs (CMd) 1989-90 WINDOWS: Who was software packaging designed for? CM: In the late 1980s and early 1990s, I was design consumer software package that were under $100; between $200 to $500 for niche as well as business markets; and specialized authoring software for developers at $1500 – $3000 per seat license. They all drive different packaging considerations and configurations due to sales and distribution channels. WINDOWS: What lessons did you learn from the design of software packaging? CM: I’m not sure if there is a right way to answer this question. You learn from everything you designed as I am the sum of my past. What I learned in logo design, lead me into icon design, which then lead me to user interface design, which then lead me to software design and information design and product development. In a parallel track, what I learned in logo design, lead me to brand development, which lead me to package design and marketing, when then lead me to user research, then data mining and user experience. Such is the education of a designer. I dabbled with children apps in 2011, were specific lessons from my packaging experience did come into play. Apps are no longer available on Apple’s apps store but you can definitely see how the lessons from package were carried over, for example, with Critteroos: www.critteroos.com. WINDOWS: What do you think about the ways in which software delivery and design is evolving today? CM: Less friction. Less waste. It’s a good thing. What I can’t stand is the subscription model. “The Level of Complexity Was Just Incredible”An interview with Eddie Yuen Eddie Yuen is a group design manager with the Adobe in-house design studio. He is responsible for managing a creative team that includes creative directors, designers, and writers. Collectively, the group is responsible for brand and product identities, creative assets, and Learn content (Adobe’s tutorial and documentation content provisions). Eddie has been involved in different levels of Adobe packaging since 1995, and so was part of the team that saw the company’s software product packaging and marketing transition and shift through boxes, online and subscription model based distribution. As an example, Eddie and his team’s process for the 2015 graphic identity design of Adobe’s Creative Cloud offerings is outlined here, a moment in which “identity” became “narrative” for this product and its communication. It truly boggles the imagination to think how many times the splash screens, marketing and introductory graphics Yuen and his team creates pass in front of the eyeballs of the artists and designers that use Adobe products to produce the vast bulk of digital media, and hence digital culture, on Earth. These aesthetics and this imagery serve as repeat introductory, artful influence and inspiration for users of these production tools. Special Thanks to Eddie Yuen, and Alex Amado, Jamie Myrold and Khoi Vinh at Adobe, as well as the The American Institute of Graphic Arts’ Director of Digital Strategies, Frank Migliorelli, and Executive Director, Julie Anixter for helping us get in touch with Eddie and his team. WINDOWS: What is the history of software packaging design? Eddie Yuen (EY): In the 80's, companies like IBM, Microsoft, and Apple started selling software for personal computers. Since then, software has always been shipped in a box. Over the past two decades, the size and material of the box has evolved as people became aware of the amount of environmental waste created by these software packaging. In the late 2000s, the software landscape completely changed with the arrival of web-based apps, and later cloud computing. With more software companies heading to the cloud as a delivery platform, the desire of a physical box is also diminishing. WINDOWS: What kinds of software products were packaged, and how? EY: When you look at the type of software that was packaged in the early days, it was either operating systems, programming languages, or word processors. None of it was visually exciting. That’s why the box front always had a picture of a computer or screenshot to indicate it had something to do with a computer. It was the arrival of the Macintosh and the introduction of MacDraw that we first started to see simple illustrations on the box fronts to show what the software could do. This was followed by conceptual illustrations when Adobe launched Photoshop and Illustrator. This was a major milestone of software packaging design. Since then both Adobe and Apple have held very high design standards, and audiences expect something different and better. WINDOWS: What other design practices are related to software packaging design? EY: I consider software packaging should be somewhat like an album cover. There should be visually intriguing cover art with a great box opening experience. I remember when I bought vinyl records in the old days, I would carefully check out every component, from the cover art to the liner notes while enjoying the music. It is the same with software packaging. Every piece of material should be well thought out and nicely designed. Unfortunately, a lot of the software boxes out there are treated like cereal boxes, with overwhelming visuals and promos on the front and excessive product information elsewhere on the box. WINDOWS: What were technical requirements for software boxes and how has this changed over time? EY: Most software packaging in the 90s were pretty large in order to hold thick user manuals, getting started guides, multiple floppy disks, and all the promos materials. One of the most common forms of packaging was the sturdy slip case, which was built with strong paper stock. As shelf space in retail stores began shrinking, the size of software packaging was also reduced. Some products are now available via a credit card sized physical object, via a redemption code. When companies became more environmentally conscious, the technical requirements of packaging also evolved. PDFs and online instructions began replacing paper manuals. DVDs replaced multiple floppy disks and CDs. At Adobe, as we designed our packaging, we were cautious to avoid metallic ink or other conventional printing materials that were not environmentally-friendly. Instead of shipping pre-built boxes, we shipped all of our materials flat to reduce its carbon footprint. This is important because we are not only designing beautiful packaging, we are also committed to being a leader in green packaging. WINDOWS: How did you first get involved in the design of software packaging? EY: Before working at Adobe, I was a freelance graphic designer working with different design shops in San Francisco. In 1995, I was hired as a designer at Adobe. My responsibilities included various marketing communications, from direct mail to product brochures. Back then taking on a leadership role in project packaging was a big deal. I was an assistant to the Senior Designers and Art Directors creating in-box materials. I gradually became more involved in the actual packaging creation process — like working with printing operations and printers and press checking. WINDOWS: What were the early projects that you worked on? EY: My first official packaging project was Photoshop 3.0 for UNIX. I was able to own the entire packaging design process, from concept and execution of the box front artwork to every piece of in-box collateral. Since the UNIX version launched after Mac and Windows, I basically followed the same workflow and process. However, I had to create all content from scratch because the audiences and business goals were so different. The challenge was to create product art that was different from the Mac/Windows version, but still held together as one unified Photoshop brand. WINDOWS: What were the themes or aesthetics that featured in early software packaging? EY: When we first shipped our products, the strategy was to rely on an iconic object to build strong brand equity like Venus for Illustrator and an eye for Photoshop. We knew our customers related to these objects and had an emotional connection to them. When we launched Creative Suite 1.0 in 2003 which was a bundle of multiple products, we decided to move away from this strategy and started introducing a completely new visual language using x-ray photography of different objects like a feather for Photoshop, a flower for Illustrator. Since then, we no longer used an iconic object to represent a product. Each product Identity has been evolved and changed at every launch. In 2014, we started to depart from the systematic approach. Instead, we reached out to our own creative community through Behance and curated a variety of artwork from amazing talents around the globe. The diversity and richness of the creative was just incredible. We have been working closely with our creative community. We want to celebrate what they did, make them shine and give credit to their amazing work. WINDOWS: Who was software packaging designed for? EY: Since Adobe is a company who makes graphic tools for designers, our target customers in the early days were mostly designers, desktop publishers, and printers. Unlike regular business users or engineers, most of this audience has a highly developed aesthetic standard. This gave us the opportunity to exercise a bit more creative freedom. For instance, instead of showing boring screenshots in a very literal way, we are able to accomplish this by using beautiful, conceptual visuals that show customers the context of the product, and also inspire them to use the products to create their own work. Adobe CS3 product lineup WINDOWS: What were the biggest challenges you encountered in software packaging design? EY: Launching Adobe CS3 was one of the biggest challenges in my career at Adobe. After Adobe acquired Macromedia in 2005, we started discussing how could we combine 15 products from the two companies into one big, powerful product brand. We had to come up with a solution to create a fresh packaging system that clearly signaled a new product without sacrificing the integrity of two already well-established brands. We basically reimagined the entire packaging from size, structure, to using recycled materials. Everything was printed in three different countries and shipped in 26 languages. The level of complexity was just incredible. WINDOWS: Are there any software packaging design projects you were involved with that stand out in your memory? EY: The CS6 launch was one of the most remarkable projects I have worked on. Instead of following the traditional systematic approach, we worked with our agency Tolleson Design to come up with a totally unconventional concept for software packaging. We used different human faces to represent the diversity and uniqueness of each product. Together they formed a unified product line. This project also allowed me to collaborate with several amazing artists around the world to work on creatives that represents the diversity of our products. We wanted to invite our community to be part of this creative process and give attribution to them by crediting each of them on the packaging featuring their art. The result was phenomenal and well received. CS6 also marked a major milestone of our product brand. We are no longer a company that just creates tools. We provide the tools to our community and grant them the creative freedom to make amazing things. We then celebrate them and pay tribute to them. Adobe CS6 product lineup WINDOWS: Are there any software packaging design projects overall that stand out in your memory? EY: Though it’s not necessary software, I think Apple’s iPhone packaging really changes the packaging landscape. The simplicity of the design and well-thought out structure, and the attention to detail provides a special experience for users. This same principle applies to other Apple packaging, and it’s a real inspiration and model that everyone wants to follow, including software packaging. WINDOWS: What lessons did you learn from the design of software packaging? EY: In the past, my knowledge of packaging was limited to seeing it as a container. The bigger the box, the more content we wanted to fill it with like manuals and advertisements. There was a lot of clutter to go through before user could get to the software. Over the years, I learned this has a negative impact on the user experience. The same goes with other design like web and print. Think about the whole experience. Eliminate things that do not add value to the users. WINDOWS: What do you think about the ways in which software delivery and design is evolving today? EY: I think it’s all part of changing consumer behavior. Instead of shopping at a physical store, people prefer shopping online. They are streaming movies directly to their TV/devices instead of picking up a movie at a store. People want things quick and easy. It’s the same with software delivery. Why wait for a 12–18 month cycle when you can get the latest and greatest instantly? As technology keeps progressing, downloading software is a breeze. It’s all part of the evolution of how we are buying things. “Design That Has No Shelf Life”An interview with Kathleen Forsythe Kathleen Forsythe of Forsythe Design was kind enough to give us her time to conduct this interview looking at the company’s history, and Kathleen’s own reflections, on the history and culture of software design, development and production. As one of the companies that was engaged rather early on in the software packaging industry, Forsythe Design’s clients included the Lotus Development Corporation for their Lotus Symphony product line (later purchased and semi-retired by IBM), as well as CenterLine Software, Vivo Software and Bitstream, Inc. These software production houses, now largely defunct, produced code sets and helped to cement the user interface design tropes of the early personal computer age, setting the stage for dynamic, animated and mobile application interface aesthetics, interaction and mental models for years to come. Ms. Forsythe’s role in the communication of all of this, at the time, rather novel complexity took the form of designing the opaque, cardboard boxes that these code sets were sold in. Kathleen’s reflections mark the transition that digital software has made in a few short decades, migrating from being a specialist ‘high-end’ product, using niche formats and supplying niche markets, to becoming-consumer and everyday, a part of the “digital lifestyles” it creates, supports and forever-upgrades. We are extremely thankful and honoured that Kathleen was able to sit down and respond to our questions about her personal and professional history as a primogenitor of software packaging design and the industries and worlds it has brought into existence. WINDOWS: What is the history of software packaging design? Kathleen Forsythe (KF): The first software packaging I designed was font packaging for Bitstream, Inc. in mid to late 80s (86/87/88). This was the very beginning of the digital font era – when fonts became consumer retail products. At around the same time, I started designing software packaging for Lotus Development Corporation. They had several business software products on the market and they contracted different design firms to work on each of the product lines. We designed not only the product packaging (box/slipcase, etc) but also the collateral material and documentation to go along with it. My packaging design involvement continued throughout the 90s with software companies Centerline Software (browser technology), and Vivo Software (video technology). However, by the end of the 90s, the “box” had already been reduced to a “folder kit” because documentation had been captured on digital media instead of printed books. The main factors precipitating the birth of the software packaging business was the technology explosion that was happening on both coasts. New technology – the internet, computer software AND hardware, etc. was popping up every day. There were so many tech start-ups in Boston (as well as Silicon Valley) that good design firms were very busy! These were also the early days of personal computers (80s), so if you were a designer in Boston (or Palo Alto), you HAD to be working on a computer (Mac, of course), understand the language, and keep up to date with the latest or else you would lose! We were lucky to be in that environment where there was so much proprietary intellectual property being created by many different start-ups – it created an incredible energy that lasted a decade. As I said before, software became consumer retail products, so of course shelf appeal became the #1 criteria for design. Young tech companies were very bold and not afraid to make a statement with their packaging. They wanted to look unique and different. They didn’t want “safe” or mainstream. My start-up clients, in many cases, were the engineers and I loved working with them. They were creative and they weren’t afraid to go out there with an abstract, conceptual idea. The more abstract, the better. That was why I loved working on tech projects. It allowed the opportunity for conceptual design which suits my aesthetic very well. The decline of box-type software packaging declined for obvious reasons – documentation was provided on digital media – and much later would go away altogether and just be available online. WINDOWS: Has the early history of software design and packaging been overlooked? KF: Well, I have always subscribed to design journals, such as Communication Arts, Graphis, HOW, etc., and these journals always featured packaging as an important design category. They would publish packaging-specific issues, so within the design community, packaging was always considered important. WINDOWS: What other design practices are related to software packaging design? KF: I think software product design was considered “high end” because of the context of the product. In other words, it was higher end than other domestic “consumer” products, because the subject matter was technology and specific to a niche audience. I agree that it is closer to book cover and album art which can be much more conceptual than other consumer products. WINDOWS: What were technical requirements for software boxes and how has this changed over time? KF: I had to align myself with excellent vendors and printers who would keep me informed of the latest materials, wraps for boxes, slipcase design, coatings to protect the ink, etc. In many cases, clients’ budgets would determine the physical limitations. Every software product package was “custom” to a certain extent, but most of the time we were using die-cuts that were standard. WINDOWS: How did you first get involved in the design of software packaging? KF: I got involved because of where I lived and worked – Boston/Cambridge was a major tech center of the country, being the home of MIT and Harvard. Tech companies – both software and hardware were prevalent. If you were a good designer in Boston or Cambridge during that time, you had tech clients and you mostly likely designed software packaging. I think that my firm was chosen to do work for these companies because they saw work in my portfolio that spoke to them. My work would not be considered “mainstream” at all. And the companies in those days wanted to make a unique statement. WINDOWS: What were the early projects that you worked on? KF: My process ALWAYS includes an in-depth “discovery” phase where I dive deeply into the context of the product. As I said earlier, I would work with the engineers to learn exactly what the product did, unique features, how it would benefit the user, etc. I would dig for interesting “process” elements that no one would ever think would be useful – and I would make those elements (however mundane) prominent in the design. I always received good input from my clients. With the start-ups, they were small so I would often be working directly with the founding team. They may not even have had marketing people yet. The larger companies (like Lotus) had marketing communications people in place and they were my client contacts. They always gave excellent project briefs. WINDOWS: What were the themes or aesthetics that featured in early software packaging? KF: I would always avoid “trends” in the design industry. It was easy to determine what trends would come and go quickly and those I would avoid. My objective, always, is to create timeless design that has no shelf life. WINDOWS: Who was software packaging designed for? KF: My client contacts were either the founding members of the company, or they were extremely competent marketing communications people who understood their markets really well. They conveyed all the necessary information to me and we worked well together as a team. I always felt valued and trusted by 95% of my clients. Afterall, they hired my firm because our work was intelligent, conceptual and unique. Rarely did I have to compromise the integrity of a design because of a client’s opinion. WINDOWS: What were the best projects you were involved in? KF: I loved the font packaging that I did for Bitstream Inc in the late 80s. Working closely with Matthew Carter has been one of THE most significant accomplishments of my career and we remain good friends to this day. I also loved the work I did with Vivo Software. Loved the people and the creative freedom I was allowed. Our work put them on the map in the video streaming industry and they ended up getting acquired by a very large firm and they all did really well! WINDOWS: What are some standout or inspiring projects you would site? KF: In the early packaging days, the designers at Apple (Clement Mok, et. al) were very inspiring to me. There were a lot of West Coast designers that were doing fantastic work. I think we all learned from each other. It’s always been said that “everything has been done” and we’re just doing variations of what has already been done in the past. I think that’s true. Look at the work of the Constructivists in the early 1900s – they laid the groundwork for modern graphic design. They did it all! We have echoed their work throughout 1970s, 80s, and 90s. WINDOWS: What was particularly interesting or challenging about software packaging design? KF: Designing for software allowed me to present contextual information in an abstract, conceptual form. It didn’t have to be “literal” and it didn’t have to reveal everything on the face. The design could leave something to the imagination – it could allow for interpretation. You can’t do that with other types of projects. WINDOWS: What do you think about the ways in which software delivery and design is evolving today? KF: I don’t mind the delivery system – downloading – but I’m not really crazy about subscription-based and paying monthly, indefinitely. I prefer to pay a one-time price for an upgrade and be able to choose when I want to upgrade. Partners WINDOWS is a project by Jamie Allen and Moritz Greiner-Petter. Special thanks to Claudia Wenger (COMPUTER + SOFTWARE) and Michi Zaugg (Plattfon). Funded by the Department of Culture Basel-City. Supported by the Institute of Experimental Design and Media Cultures (IXDM) / Academy of Art and Design FHNW. Who Aram Bartholl Never Worry Again Amazon Dash is an Internet connected button to make online shopping as simple as possible. The ‘click-buy’ interface from the website becomes a real button. For each brand series Amazon offers a different button which, when pressed will result in the delivery of a single product. “Never worry again” [to run out of soap, shampoo or chocolate etc.] was the slogan Amazon used advertise this new invention in Spring 2016. With each button press a complicated chain of logistics and automation is triggered. A hyper optimized series of commands is issued through networks, software, robots and low wage workers to make the perfect delivery chain work. We don‘t understand in detail how all this works. Where does the product come from? Who made it? How many robots or low wage workers were involved or what is their condition? We just press a button and like magic a new consumer good appears a day later. The current worldwide drone war works in a similar way. Drone operations are highly automated and distributed among a series of specialists with different tasks. Only very few officials get the whole picture. Who and why someone is attacked? The drone soldier in a bunker in Nevada (or else where) who presses the button to kill certainly doesn’t know. All we know is that these soon to be automated wars are taking place to ‘protect’ our ‘freedom’ to consume, to make sure the people in the western world keep buying more products every day. Aram Bartholl's work creates an interplay between internet, culture and reality. How do our taken-for-granted communication channels influence us? Bartholl asks not just what humans are doing with media, but what media is doing with humans. Tensions between public and private, online and offline, techno-lust and everyday life are at the core of his work and his public interventions and installations, often entailing surprisingly physical manifestations of the digital world, challenge our concepts of reality and incorporeality. Bartholl has exhibited at MoMA Museum of Modern Art NY, the Pace Gallery NY and London's Hayward Gallery as well as conducting countless workshops, talks and performances internationally. Bartholl lives and works in Berlin. http://datenform.de Benoît Verjat ‘Don’t be so close to the TV! Step back!’ Children tend to be too close to the screens. Charles, my nephew, was one day so close to my phone that both of us could not see the interface. I installed a drawing app and asked him to interact with his nose so his face could be as close as possible to the screen. We started to alter images with a smudge tool (similar to the one you got in Gimp with a finger for icon). The nose became the finger, and from that I asked my friends to draw with their nose on my phone. For WINDOWS the box is about an imaginary OS which will take the nose as the main interaction device. With eyes so close, all you see on the screen would be some blurry coloured shapes that help you to navigate through the function and menus of your phone. Benoît Verjat is a designer and researcher concerned with real time interactions. In various contexts and format including performance, debate, workshop, politics or scientific research how visual representation can be summon or created at the speech speed via situated instruments? For "demo" purpose he produces "alibis" — images meant to show the specificity of the instrument — who often refer to painting, history of representation and image making techniques. http://benoit.verjat.com http://dcfvg.com Bernhard Garnicnig John Baldessari for the Big Data / Big Disillusionment Generation. While the 1970s afforded us to look for minimalist lines in Baldessaris photographs, today we seek relevant data and facts in simulations of spontaneity and concurrence. And so it seems that throwing four balls in the air is a similarly relevant instrument of making statements and predictions like the heuristic models of statistical supercomputing, which rely on simplifying complexity to make the world as a system computable. Bernhard Garnicnig currently works on building emancipatory institutional and corporate surfaces as structures of aesthetic collaboration and political agency and on earnest attempts at making paradoxical things work to see what happens. He is the current Very Artistic Director of the Palais des Beaux Arts Wien, a historic site for futuristic art; he co-founded continent., a journal and publishing collective for thinking through media and the Bregenz Biennale, a festival for ephemeral public art in the town he was born. He is the director of Supergood, a lifestyle brand and catering service that exists in the ambiguous space between product and performance. http://bernhardgustavanton.com Ciara Phillips Ciara Phillips uses printmaking and other forms of making – photography and textiles - as a way to instigate discussion around current social and political concerns. Her artworks combine the bold graphic language of printed forms of public address (such as informational posters and billboards) with more intimate visual imagery including photographs of her friends at work, and objects that surround her. Phillips often creates context-specific installations that foreground exhibition spaces as places for collaborative thinking and working. In her ongoing project Workshop (2010 – ) she transforms galleries into a spaces of simultaneous production and display which she invites others (artists, designers, community groups, children) to collaborate with her in making new artworks. Phillips has exhibited widely internationally and in 2014 she was nominated for the UK's Turner Prize. http://www.ciaraphillips.com Constant Dullaart DullDream™ by DullTech™ is a series of experiments appropriating neural network image recognition technology to make visual representation less interesting. Can machine learning help us desensitize? Our impactful lives are clogging up social media feeds with unique filter settings, leaving us nostalgic for a vanilla future. Can machine learning help us achieve this? Take the excitement out of our lives, prepare us for a time where we will all have to be the same, have the same value’s and culture? Painting a future where the Dull is no longer a dream but a nightmare? Constant Dullaart‘s (NL, 1979) practice reflects on the broad cultural and social effects of communication and image processing technologies, from performatively distributing artificial social capital on social media to completing a staff-pick Kickstarter campaign for a hardware start-up called Dulltech™. His work includes websites, performances, routers, installations, startups, armies, and manipulated found images, frequently juxtaposing or consolidating technically dichotomized presentation realms. Recent solo exhibitions include Synthesising the Preferred Inputs, Future Gallery, Berlin; Deep Epoch, Upstream Gallery, Amsterdam; The Possibility of an Army, Kunsthalle Schirn, Frankfurt; Jennifer in Paradise, Futura, Prague; The Censored Internet, Aksioma, Ljubljana (2015); Stringendo, Vanishing Mediators at Carroll / Fletcher, London; Brave New Panderers, XPO gallery, Paris (2014); Jennifer in Paradise, Future Gallery, Berlin; Jennifer in Paradise, Import Projects, Berlin (2013) and Onomatopoeia, Utah Museum of Contemporary Art, Salt Lake City (2012). Group exhibitions include Then They Form Us, MCA, Santa Barbara; When I Give, I Give Myself, Van Gogh Museum, Amsterdam; Algorithmic Rubbish, Stedelijk Museum Bureau Amsterdam (2015); Casting a Wide net, Postmasters, NYC, USA; Online/Offline/Encoding Everyday Life, Transmediale, Berlin (2014); Online Mythologies, Polytechnic Museum, Moscow; Genius without talent, de Appel, Amsterdam (2012); A Painting Show, Autocenter, Berlin (2011). Dullaart has curated several exhibitions and lectured at universities and academies throughout Europe, most currently at the Werkplaats Typografie. Recently he has been awarded the Prix Net-Art 2015. http://constantdullaart.com/ Evan Roth In Landscapes, an exploration into the physicality of the Internet is used as a gateway to enter nature and better understand the cultural shifts brought about by the increasingly frequent demands of technology. Evan Roth is an artist based in Paris whose practice visualizes and archives typically unseen aspects of rapidly changing communication technologies. Through a range of media from sculpture to websites, the work addresses the personal and cultural effects surrounding these changes and the role of individual agency within the media landscape. Roth’s work has been exhibited at the Tate, Whitechapel Gallery and is the permanent collection of the Museum of Modern Art NYC. http://evan-roth.com/ Geraldine Juárez HI-FI GEO “It is neoliberalism, rather than merely ‘denialism’, that needs to be defeated. If we fail in this task, we might as well get used to the murky, synthetic sunlight of a user-pays atmosphere.” – “Beyond Denial” – Philip Mirowski, Jeremy Walker and Antoinette Abboud. HI-FI GEO is a fictional videogame based on “Earthmasters: The dawn of the age of climate engineering” by Clive Hamilton and “Flash Boys” by Michael Lewis. In the past-present future, financial markets use microwave technology to send and exchange capital in the form of signals, but these signals don’t travel well in bad weather conditions. GEO have the power to control climate phenomena and open small windows of time where financial signals can be captured to redistribute global wealth. In order to communicate with GEO and complete the mission, the user need to learn dance rituals to command the sun, water, wind and fire. The artwork of the videogame box was commissioned to Jaime Ruelas, the legendary illustrator of the flyers and mixtape art of the mexican soundsystem POLYMARCHS, a group of DJs active in México back in the time where users needed CDs and peripherals such as Powerglove and Dancepad to play videogames. Lamin Fofana, a DJ and music producer based in Berlin, created the soundtrack of the game, which is available in a limited edition of 50 CDs. Geraldine Juárez (MX) is an artist working with stories, histories and contexts about media technologies and its related technics and economics. Recent group exhibitions include ‘University of Disaster’, Bosnia and Herzegovina Pavillion, Venice; ‘Situations/ Placeholder’, Fotomuseum Winterthur, Switzerland; ‘Works for Radio’, Cinemateket, Copenhagen, Denmark; ‘Dreamlands: Immersive Cinema & Art, 1905-2016’, Whitney Museum of American, New York, USA. Her writing has been published in The Radiated Book (Constant,2016), Intercalations 3: Reverse Hallucinations from the Archipielago (K.Verlag, 2017) and Scapegoat, Journal for Architecture, Landscape and Political Economy (2017). Geraldine lives and works in Gothenburg, Sweden. http://geraldine.juarez.se Ishac Bertran In the 90s a group of researchers was put together to investigate new literary formats that would help dissemination of new ideas. After two years of research, the group defined three templates that were proven to spread messages faster than any existing format, and with a deeper power of influence. The first known case of mass distribution using those formats goes back to 1994, when thousands of leaflets were printed from skyscrapers in the main US cities during a presidential campaign. The new templates, combined with technological advances in digital printing, became a new standard for communication that changed media and society forever. BubbleUp was the first commercial product to appear in the market in 1996. Ishac Bertran is a designer and artist from Barcelona, currently living in New York. His work revolves around the relationship between people and technology. In recent years he has combined freelance work for clients with self-driven projects. As an interaction designer, he specializes in envisioning and prototyping future scenarios that often involve emerging technologies. He enjoys looking toward the future as well as learning from the past to better understand our culture. Through art he investigates the aesthetics of nature, physics and more recently, computation. He finds beauty in complex systems that are driven by simple principles. http://ishback.com Jamie Allen Elements* There very fact that there is a term for the cyclical imbalances that occur when you discover you have something that everybody wants — “resource curse” — is telling of the routine and presupposed inevitability of the disparities that accompany discovery, extraction, exploitation, wealth and poverty driven by crescendos of material resource demand. Compelled by the conjoined compulsions of market trend, consumer desire and technological “progress”, resource curses are today tightly coupled to software application stack architectures. Each new piece of code, every new algorithm, all these expanded data stores are necessarily backwardly compatible with deeply entrenched trajectories of matter and manufacturing. These dirty digital systems, new services and devices, always call back to the mined, processed and purified elemental material precursors that they run on. The execution of software is bound to the requirements of silicon computation, copper communication and lithium power. * Not to be confused with ADOBE Elements Jamie Allen is a Canadian researcher, artist, designer and teacher, interested in what technologies teach us about who we are as individuals, cultures and societies. He likes to make things with his head and hands, and has worked as an electronics engineer, a polymer chemist and a museum designer in NYC. He lectures, publishes and exhibits worldwide. He lives in Europe, works on art and technology projects, writes a bit, and tries to engage himself with and create prefigurative institutions which that are generous and collaborative, acknowledging that friendship, passion and love are central to artistic, research and knowledge practices. His PhD (summa cum laude) was supervised by Siegfried Zielinski and Avital Ronell. He is Senior Researcher at the Critical Media Lab in Basel, Switzerland. http://jamieallen.com Jan Robert Leegte The Internet is dead, long live the Internet! With the coming of the web in the nineties, the Internet transformed from an idealistic dream to the machine of power it is now. A beautiful child with all its naive quirks, that you lovingly smiled upon has now grown up, with grown-up problems of a global scale. On the one visible side every inch is being commodified, while on the dark side, states and hackers are in an all out war for power. Back at art school in the late nineties I made my first home connection with the Internet using a Compuserve service. It came on a nice CD-ROM, with the text, “Try the Internet!”, that came with a magazine. A world of total anarchy on a corporate plastic disk. Jan Robert Leegte (born 1973, The Netherlands) started working as an artist on the Internet in 1997. In 2002, he shifted his main focus to implementing digital materials in the context of the physical gallery space, aiming to bridge the online art world with the gallery art world, making prints, sculpture, installations and projections, connecting to historical movements like land art, minimalism and conceptualism. As an artist Leegte explores the position of the new materials put forward by the (networked) computer. Photoshop selection marquees, scrollbars, Google Maps, code and software are dissected for their sculptural properties. His work has been exhibited internationally (Lux, Whitechapel Gallery, Stedelijk Museum Amsterdam). He is currently represented by Upstream Gallery Amsterdam. Jan Robert Leegte lives and works in Amsterdam, the Netherlands. http://www.leegte.org Moritz Greiner-Petter Oulipo Office In the history of computing the office has been the primal scene for domesticating personal computers and its users alike. The office is the scriptorium of mundane literature – recommendation letters and meeting notes, invoices and annual reports, drafts of drafts of drafts of emails. The personal computer spawned a digitisation of the tools of workaday creative labour – not to be mistaken for the automation of work itself. In a homogenous ecology of provided tools and working styles clerks and poets become subject to virtually the same working environments. To create is to become the secretary of your imagination and imagination becomes bound to the labouriousness of software virtuosity. In the spirit of Oulipean techniques of constrained and automatic writing, Oulipo Office proposes new structures and patterns for business-literary work. It is where poetry and computation meet and administration conflates with literary creativity. To cherish and obey arbitrary rule sets in the creation of literary works exposes the arbitrariness of language and formats of expression, and outwits the fetishisation of human creativity. Oulipo Office shows the formatting of language and creativity at work. Oulipo Office is the workshop for potential office automation. Moritz Greiner-Petter is designer and researcher with a background in visual communication and digital media design. He is junior researcher at the Institute of Experimental Design and Media Cultures (IXDM) Basel. As a researcher and practitioner he is exploring the media aesthetics and epistemes of information technologies through design practice. His work takes the form of speculative artifacts and interactive prototypes, experimental publishing formats as well as writing. http://jammersplit.de Peter Moosgaard Box from Cast Away (Replica) Cast Away is one of the weirdest cases of product placement: In the white mans struggle agains the forces of nature, Chuck Noland (Tom Hanks) is aided by stranded fedex boxes, which represent the western commodity and its worldwide availability (including famous volleyball “Wilson” a weird syncretism of a totem, and a product, and a companion). It is in total seclusion, where western man has to finally embrace animism to fight his isolation, but towards his commodities and sponsors. The last remaining gap of irony between us and our physical products is finally dissolved: in total empathy we too cry for sponsor Wilson, he was our last companion in global wilderness. Not only within the narrative of the film, but also in infrastructure FedEx invested over 54 Million Dollars to implement the story of a delivery guy who – after being rescued and alienated – delivers one last parcel he took with him from the island, demonstrating the reliability of the employee. My box is a replica of the Fedex Prop in Cast Away – a film about corporate totemism when left to ones own devices. A magical parcel never to be opened. Peter Moosgaard lives and works in Vienna, Austria. Graduated in Digital Arts (MA) in 2012, he first studied Philosophy and Linguistics, and later Visual Media at the University of Applied Arts Vienna, Class Prof. Peter Weibel. He is a member of the international activist group WochenKlausur since 2007 and co-founded the experimental TRAUMAWIEN publishing in 2010. Moosgaard worked as a journalist, janitor, teacher and dj. He has had exhibitions and performances in Istanbul, Stockholm, Athens, Paris, Amsterdam, Berlin, Munich, Brussels, Basel and many more. Currently he is a PhD Candidate at the Academy of Fine Arts in Austria and his research focuses on Cargo Cults and Shanzahi as global, postdigital strategies. http://cargoclub.tumblr.com Phillip Stearns OPEN VAULT: RELICS OF AN IMAGINED FUTURE PRESENT A selection of software retail package designs made for the CIA’s Center for Cyber Intelligence cyber weapons from the Vault 7 leaks published by WikiLeaks. Unknown to most, we are in the midst of a rapidly escalating global cyber war. This war isn’t one with clearly defined borders or groups. Rather, there is a diverse ecology of individuals, criminal groups, private organizations and companies, state sponsored groups, and government intelligence organizations all operating with their own agendas. Cyber warfare involves the deployment of cyber weapons, or weaponized malicious software (malware) against targets. The motivations are as diverse as those operating on the frontlines. High profile attacks covered by the media have resulted in power outages in Ukraine, Internet Outages in Libya, Destruction of Uranium Enriching Centrifuges in Iran, Ransomware attacks on British National Health Service, Internet Service disruptions due to Distributed Denial of Service Attacks on DYN’s Domain Name System servers to attacks on voter registries in the US as well as phishing attacks on US and French presidential campaigns. The boxes in this project represent only a handful of actual cyber weapons developed by the CIA. Knowledge of the CIA’s cyber arsenal was first made public by Wikileaks on March 7th, 2017: “Recently, the CIA lost control of the majority of its hacking arsenal including malware, viruses, trojans, weaponized "zero day" exploits, malware remote control systems and associated documentation. This extraordinary collection, which amounts to more than several hundred million lines of code, gives its possessor the entire hacking capacity of the CIA. The archive appears to have been circulated among former U.S. government hackers and contractors in an unauthorized manner, one of whom has provided WikiLeaks with portions of the archive. "Year Zero" introduces the scope and direction of the CIA's global covert hacking program, its malware arsenal and dozens of "zero day" weaponized exploits against a wide range of U.S. and European company products, include Apple's iPhone, Google's Android and Microsoft's Windows and even Samsung TVs, which are turned into covert microphones.” -- wikileaks.org Many of the CIA’s cyber weapons revealed by the leaks were in active development which included several ZeroDay vulnerabilities, those that software or hardware developers are unaware of and have not patched or corrected. In addition to having extensive research capabilities for seeking out these vulnerabilities and developing its own exploits, there is evidence that the CIA was actively collaborating with Britain’s Mi5 as well as tapping into research done by broader Information Security and hacking communities. The CIA isn’t alone in developing cyber arms development. There is a growing cyber arms market, with several hundreds of companies globally developing and peddling cyber weapons and cyber “security” services. A recent article by the New York Times Magazine covering the Italian group Hacking Team reveals that many of these companies operate in obscurity, selling their wares directly to governments, not all of whom have clean human rights abuse records. The Vault 7 leaks are significant, not only because they reveal the scope of the CIA’s involvement in developing cyber weapons, but that they lost control of the arsenal. Knowledge of these vulnerabilities and exploits could easily spread to malicious actors who could then deploy widespread cyber attacks as evidenced by the recent ransomware attacks on the NHS. The WannaCry ransomware attack is a direct result of a leak by the hacking group Shadow Brokers of a pair of ZeroDay exploits developed by the NSA targeting the Windows operating system. Cyber arms deals do not involve the exchange of physical equipment like conventional arms deals. Agreements happen over encrypted channels, oftentimes using cryptocurrencies. These activities are kept far from public eyes. Leaks, like Vault 7 and others are oftentimes the only way the general public to become informed of the current situation. However, the highly technical and immaterial nature of cyber warfare creates barriers to broad efforts to increase public awareness of the dynamics behind the headline-making attacks. This collection of software boxes imagines what these cyber weapons might look like if sold in a public commercial space using some of the visual language of cultural tropes referenced, hinted at, or suggested by their names. They are relics of an imagined future present. Phillip David Stearns (USA, 1982) holds a MFA from Cal Arts in Music Composition and Integrated Media (2007) and a BS from University of Colorado @ Denver in Music Industry Studies: Sound Recording (2005). His work is centered on the use of electronic technologies and electronic media to explore dynamic relationships between ideas and material as mobilized within complex and interconnected societies. Deconstruction, reconfiguration, and extension are key methodologies and techniques employed in the production of works that range from audio visual performances, electronic sculptures, light and sound installation, digital textiles, and other oddities both digital and material. http://phillipstearns.com Pussykrew Pussykrew is an interdisciplinary duo of Tikul and mi$ gogo. Their creative practices range from multimedia installations, 3D imagery, videoclips and audio-visual performance, to DIY electronics and sculpture design. Pussykrew is originally from Poland, developed globally via Ireland, UK, Berlin, Brussels, Shanghai and online environment. Pussykrew explores post-human concepts, corporeal aesthetics, urban landscapes and fluid identities with their synthetic-organic notions, constantly searching for liminal states within the digital realm. Pussykrew is creating gender-bending visual journeys, filtered through carnal data mesh, liquid dysphoria and 3D fantasy shuffle. Pussykrew pieces are known for their multi-sensory purposes and physical affection. Pussykrew works are being presented in various contexts - at digital arts and film festivals, independent art spaces, renown institutions, club environments, as well as commercial events, tech fairs and galleries. Pussykrew have worked with Boiler Room / x House of Vans, Converse, Hugo, Mini, WARP Records and performed live visuals for numerous international music artists (such as Angel Haze, Kelela, Evian Christ, Kode9, Nguzunguzu.. ) Pussykrew loves dynamic surroundings, interactive spaces, discoveries and future scenarios. http://niochnioszki.net Rosa Menkman DCT ENCRYPTION Resolutions determine what is read and what is illegible. DCT ENCRYPTION uses the aesthetics of JPEG macroblocks to mask its secret message as error. The legibility of an encrypted message does not just depend on the complexity of the encryption algorithm, but also on the placement of the data of the message. The encrypted message, hidden on the surface of the image is only legible by the ones in the know; anyone else will ignore it like dust on celluloid. How Not to be Read, a recipe using DCT: Choose a lofi JPEG base image on which macroblocking artifacts are slightly apparent. This JPEG will serve as the image on which your will write your secret message. If necessary, you can scale the image up via nearest neighbour interpolation, to preserve hard macroblock edges of the base image. Download and install the DCT font Position your secret message on top of the JPEG. Make sure the font has the same size as the macroblock artifacts in the image Flatten the layers (image and font) back to a JPEG. This will make the text no longer selectable and readable as copy and paste data. Rosa Menkman is a Dutch artist, curator and researcher, focusing on noise artifacts that result from accidents in both analogue and digital media (such as glitch, encoding and feedback artifacts). She believes that these artifacts can facilitate an important insight into the otherwise obscure alchemy of standardization via resolutions. This process of imposing efficiency, order and functionality does not just involve the creation of protocols and solutions, but also entails black-boxed, obfuscated compromises and alternative possibilities that are in danger of staying forever unseen or even forgotten. http://rosa-menkman.blogspot.ch Sebastian Schmieg While technology is often described as an extension of our body, my software box hints at a reversed relationship: digital workers as software extensions. The ubiquitous network and the computerisation of everything have not only blurred the lines between bots and people – in fact, supposedly autonomous programs are sometimes people that have to act as if they were software. This development has also made it very easy for everyone to hire, program and retire humans as part of any workflow: bodies and minds that can be plugged in, be re-wired, and be discarded as one sees fit. Sebastian Schmieg examines the ways networked technologies shape online and offline realities, in artworks that range from shredded hard-drives from a Google datacenter to crowd-sourced versions of popular self-help books using Amazon's Kindle. His output encompasses websites, videos, interface performances, lectures, online interventions, print-on-demand books or neural networks. His artistic practice currently revolves around digital labor, optimization and the amalgamation of humans and software. Previously his work has been exhibited at The Photographers’ Gallery, London, UK; Transmediale, Berlin, Germany; Art Center Nabi, Seoul, South Korea; and Bitforms Gallery, New York, USA. Sebastian Schmieg lives and works in Berlin. http://sebastianschmieg.com Suzanne Treister Survivor (F)/Interplanetary Sex Station 01/Software For this WINDOWS exhibition I have made a new design for an imaginary software box, based on an image from my currently ongoing project, SURVIVOR (F). Between 1993-1994 I made about 50 works for a project called, SOFTWARE: Would you recognise a Virtual Paradise? This group of works were constructed from cardboard boxes and actual floppy discs which were both painted or covered in other materials. Each software package imagined a different coded or virtual scenario, were it possible for the disc to be inserted into a computer’s disc drive, which it was not. See: http://www.suzannetreister.net/ This new work imagines code for a post-apocalyptic scenario where sex takes place only in outer space between interplanetary species, which may or may not include the human race. Suzanne Treister (b.1958 London UK) studied at St Martin’s School of Art, London (1978-1981) and Chelsea College of Art and Design, London (1981-1982) based in London having lived in Australia, New York and Berlin. Initially recognized in the 1980s as a painter, she became a pioneer in the digital/new media/web based field from the beginning of the 1990s, making work about emerging technologies, developing fictional worlds and international collaborative organisations. Utilising various media, including video, the internet, interactive technologies, photography, drawing and watercolour, Treister has evolved a large body of work which engages with eccentric narratives and unconventional bodies of research to reveal structures that bind power, identity and knowledge. Often spanning several years, her projects comprise fantastic reinterpretations of given taxonomies and histories that examine the existence of covert, unseen forces at work in the world, whether corporate, military or paranormal. http://www.suzannetreister.net Windows93 Windows93 is run by Jankenpopp and Zombectro. http://www.windows93.net Where Display 16 June – 31 July 2017 In the shop window ofCOMPUTER + SOFTWARE Klybeckstrasse 76CH-4057 Basel Facebook event Opening Friday 16 June 2017, 7PM PLATTFON Record Store Feldbergstrasse 48CH-4057 Basel With a lecture by Peter Moosgaard & Jamie Allen and a performance by Phillip Stearns. WINDOWS