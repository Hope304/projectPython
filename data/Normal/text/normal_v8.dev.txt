V8 JavaScript engineV8Show navigationHomeBlogDocsToolsJS/Wasm featuresResearchWhat is V8?V8 is Google’s open source high-performance JavaScript and WebAssembly engine, written in C++. It is used in Chrome and in Node.js, among others. It implements ECMAScript and WebAssembly, and runs on Windows 7 or later, macOS 10.12+, and Linux systems that use x64, IA-32, ARM, or MIPS processors. V8 can run standalone, or can be embedded into any C++ application.Latest posts and feature explainersStatic Roots: Objects with Compile-Time Constant Addresses 05 February 2024 JavaScriptImport attributes 31 January 2024 ECMAScriptV8 is Faster and Safer than Ever! 14 December 2023 JavaScript WebAssembly security benchmarksMaglev - V8’s Fastest Optimizing JIT 05 December 2023 JavaScriptA new way to bring garbage collected programming languages efficiently to WebAssembly 01 November 2023 WebAssemblyControl-flow Integrity in V8 09 October 2023 securitySpeeding up V8 heap snapshots 27 July 2023 memory toolsWebAssembly tail calls 06 April 2023 WebAssemblyIntroducing the WebAssembly JavaScript Promise Integration API 19 January 2023 WebAssemblyPointer compression in Oilpan 28 November 2022 internals memory cppgcMore articles can be found in the blog archive and the features section.Branding · Terms · Privacy · Twitter · Edit this page on GitHubExcept as otherwise noted, any code samples from the V8 project are licensed under V8’s BSD-style license. Other content on this page is licensed under the Creative Commons Attribution 3.0 License. For details, see our site policies.