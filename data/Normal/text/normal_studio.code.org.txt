Learn Computer Science - Code.org Your browser is not supported. Please upgrade your browser to one of our supported browsers. You can try viewing the page, but expect functionality to be broken. App Lab works best on a desktop or laptop computer with a mouse and keyboard. You may experience issues using this tool on your current device. Game Lab works best on a desktop or laptop computer with a mouse and keyboard. You may experience issues using this tool on your current device. You may experience issues using Web Lab in Private Browsing mode. Please reload your project in normal mode. Sorry for the inconvenience. CS in Algebra curriculum and content is being deprecated. Within the next few months, this lab will no longer be available. Please check out Bootstrap: Algebra instead. Learn More. Learn Teach Projects Stats Help Us Incubator About Create Sprite Lab Artist App Lab Game Lab Dance Party View all projects... Sign in Help and support Report a problem Course Catalog Projects Incubator Help and support Report a problem Learn Teach Educator Overview Elementary School Middle School High School Hour of Code Partner with Us Beyond Code.org Inspire a Student Online Community Technical Requirements Tools and Videos Stats Help Us About About Us Leadership Donors Partners Full Team Newsroom Evaluation Careers Contact Us FAQs Privacy & Legal Privacy Policy Cookie Notice Terms of Service AP® CSA Grades 10-12 AP® CSA AP® Computer Science A invites students to learn programming using Java and can be taken after completing an introductory course such as Computer Science Principles or Computer Science Discoveries. Audience: High school students, grades 9 - 12 Curriculum length: A minimum of 140 class hours; should be taught as a full-year course. Contains 9 units, which includes an AP Exam Prep unit. Prior knowledge: For students, Computer Science Principles, Computer Science Discoveries, and/or a similar introductory computer science course. Teachers who are able to independently write and debug an error-free function (or procedure) with one or more parameters and that uses conditional logic, loops, and an array (or a list) will be best positioned to use our CSA curriculum with students. Optional professional learning: Our year-long program is intended to support both teachers experienced with Code.org curriculum and tools and teachers who are new to Code.org. Read more about the robust support structure for teachers in our Professional Learning program on the Professional Learning page. Cost to use curriculum: None Languages: English only Learn more CS Principles Grades 9-12 CS Principles Computer Science Principles covers many topics including the Internet, Big Data and Privacy, and Programming and Algorithms. The curriculum is flexible to be taught as an AP or non-AP course. Audience: High school students, grades 9 - 12 Curriculum length: 100-180 hours, should be taught as a full-year course. Contains 10 units, including a Create Performance Task prep unit. Prior knowledge: None! Just bring your curiosity. Optional professional learning: Our yearlong program includes a 1-week summer workshop, 24 hours' worth of follow up workshops during the academic year, and online support through the Code.org teacher forum. Cost to use curriculum: None Languages: English only Learn more View course CS Discoveries Grades 6-10 CS Discoveries Computer Science Discoveries is an introductory course that empowers students to engage with computer science as a medium for creativity, communication, problem solving, and fun! Audience: Middle and high school students, grades 6 - 10 Curriculum length: 50-150 hours, can be taught as a semester or full-year course Prior knowledge: None! Just bring your curiosity. Optional professional learning: Our yearlong program includes a 1-week summer workshop, 24 hours' worth of follow up workshops during the academic year, and online support through the Code.org teacher forum. Cost to use curriculum: None Languages: English only Learn more View course CS Fundamentals Grades K-5 CS Fundamentals Designed to be fun and engaging, Code.org’s progression of Computer Science Fundamentals courses blend online and "unplugged" non-computer activities to teach students computational thinking, problem solving, programming concepts and digital citizenship. Audience: Elementary students, ages 4-11 Curriculum length: 6 courses, 10-25 hours each, optimized for grades K-5 Prior Knowledge: None! Just bring your curiosity Optional professional learning: 1-day workshop, in-person in the US and online globally. Cost to use curriculum: None Languages: English, Spanish, French, Arabic, Portuguese, Hindi, Chinese, Russian, and 10 other languages. Learn more View course CS Fundamentals: Express Grades 3-12 CS Fundamentals: Express For a lightweight option that can be integrated as a supplemental resource in an existing technology or programming class, or as an after-school program, Code.org offers the 30-hour Computer Science Fundamentals Express Course. This course covers all the core concepts from the elementary school curriculum Computer Science Fundamentals, but at an accelerated pace designed for older students. Audience: Students ages 9-18 Curriculum length: 30 hours Prior Knowledge: None! Just bring your curiosity Cost to use curriculum: None Languages: English, Spanish, French, Arabic, Portuguese, Hindi, Chinese, Russian, and 10 other languages. Learn more View course Pre-reader Express Grades K-2 Pre-reader Express This single condensed 14-lesson course covers the core concepts from the kindergarten and first grade courses in CS Fundamentals at an accelerated pace. Audience: Pre-readers, ages 4-8 Curriculum length: 10-14 hours Prior knowledge: None! Just bring your curiosity. Cost to use curriculum: None Languages: English only Learn more View course Professional Learning Learn more Elementary school Middle school High school K 1 2 3 4 5 6 7 8 9 10 11 12 AP® CSA AP® CSA AP® Computer Science A invites students to learn programming using Java and can be taken after completing an introductory course such as Computer Science Principles or Computer Science Discoveries. Audience: High school students, grades 9 - 12 Curriculum length: A minimum of 140 class hours; should be taught as a full-year course. Contains 9 units, which includes an AP Exam Prep unit. Prior knowledge: For students, Computer Science Principles, Computer Science Discoveries, and/or a similar introductory computer science course. Teachers who are able to independently write and debug an error-free function (or procedure) with one or more parameters and that uses conditional logic, loops, and an array (or a list) will be best positioned to use our CSA curriculum with students. Optional professional learning: Our year-long program is intended to support both teachers experienced with Code.org curriculum and tools and teachers who are new to Code.org. Read more about the robust support structure for teachers in our Professional Learning program on the Professional Learning page. Cost to use curriculum: None Languages: English only Learn more CS Principles CS Principles Computer Science Principles covers many topics including the Internet, Big Data and Privacy, and Programming and Algorithms. The curriculum is flexible to be taught as an AP or non-AP course. Audience: High school students, grades 9 - 12 Curriculum length: 100-180 hours, should be taught as a full-year course. Contains 10 units, including a Create Performance Task prep unit. Prior knowledge: None! Just bring your curiosity. Optional professional learning: Our yearlong program includes a 1-week summer workshop, 24 hours' worth of follow up workshops during the academic year, and online support through the Code.org teacher forum. Cost to use curriculum: None Languages: English only Learn more View course CS Discoveries CS Discoveries Computer Science Discoveries is an introductory course that empowers students to engage with computer science as a medium for creativity, communication, problem solving, and fun! Audience: Middle and high school students, grades 6 - 10 Curriculum length: 50-150 hours, can be taught as a semester or full-year course Prior knowledge: None! Just bring your curiosity. Optional professional learning: Our yearlong program includes a 1-week summer workshop, 24 hours' worth of follow up workshops during the academic year, and online support through the Code.org teacher forum. Cost to use curriculum: None Languages: English only Learn more View course CS Fundamentals CS Fundamentals Designed to be fun and engaging, Code.org’s progression of Computer Science Fundamentals courses blend online and "unplugged" non-computer activities to teach students computational thinking, problem solving, programming concepts and digital citizenship. Audience: Elementary students, ages 4-11 Curriculum length: 6 courses, 10-25 hours each, optimized for grades K-5 Prior Knowledge: None! Just bring your curiosity Optional professional learning: 1-day workshop, in-person in the US and online globally. Cost to use curriculum: None Languages: English, Spanish, French, Arabic, Portuguese, Hindi, Chinese, Russian, and 10 other languages. Learn more View course Pre-reader Express CS Fundamentals: Express Pre-reader Express This single condensed 14-lesson course covers the core concepts from the kindergarten and first grade courses in CS Fundamentals at an accelerated pace. Audience: Pre-readers, ages 4-8 Curriculum length: 10-14 hours Prior knowledge: None! Just bring your curiosity. Cost to use curriculum: None Languages: English only Learn more View course CS Fundamentals: Express For a lightweight option that can be integrated as a supplemental resource in an existing technology or programming class, or as an after-school program, Code.org offers the 30-hour Computer Science Fundamentals Express Course. This course covers all the core concepts from the elementary school curriculum Computer Science Fundamentals, but at an accelerated pace designed for older students. Audience: Students ages 9-18 Curriculum length: 30 hours Prior Knowledge: None! Just bring your curiosity Cost to use curriculum: None Languages: English, Spanish, French, Arabic, Portuguese, Hindi, Chinese, Russian, and 10 other languages. Learn more View course Professional Learning for all grade levels Learn more Artist Play Lab App Lab Unplugged Activities Text compression widget Artist Unleash your creativity! Draw cool pictures and create designs with the Artist! Learn more Play Lab Start a Play Lab project to create a story or make a game! Save and return to your project to build on it little by little, then share with friends when you're done! Learn more App Lab App Lab is a programming environment where you can make simple apps. Design an app, code with blocks or JavaScript, and share your app in seconds. Learn more Unplugged Activities The Internet Simulator is designed to let students visualize, experiment with, and solve different kinds of problems associated with networked computers in a hands-on way. Learn more Text compression widget The text compression widget gives students the chance to learn about identifying patterns and developing a strategy for compressing a piece of text. Learn more Pixelation widget Cryptography widgets Internet simulator Game Lab Pixelation widget The pixelation widget gives students the chance to learn about how images are encoded with pixel data. Then they'll encode their own images in binary. Learn more Cryptography widgets These two widgets let students play with some classic schemes for both encrypting and "cracking" secret messages. Learn more Internet simulator A group of students can learn how the internet works by communciating with each other. Learn more Game Lab Game Lab is a programming environment where you can make simple animations and games with objects and characters that interact with each other. Learn more Course 1 Ages 4-6 Introduction to computer science for early readers. Course 2 Ages 6+ (reading required) Introduction to computer science for students who can read. Course 3 Ages 8-18 Delve even deeper into programming while building games and interactive stories. This is a follow-up to Course 2. Course 4 Ages 9-18 Build more complex programs with concepts such as for loops and functions with parameters. This is a follow-up to Course 3. Minecraft Use your creativity and problem solving skills to explore and build underwater worlds with code! Minecraft Minecraft is back with a brand new activity for Hour of Code! Star Wars Learn to program droids, and create your own Star Wars game in a galaxy far, far away. Frozen Let's use code to join Anna and Elsa as they explore the magic and beauty of ice. Classic Maze Try the basics of computer science. Millions have given it a shot. Flappy Code Wanna write your own game in less than 10 minutes? Try our Flappy Code tutorial! Infinity Play Lab Use Play Lab to create a story or game starring Disney Infinity characters. Play Lab Create a story or make a game with Play Lab! Artist Draw cool pictures and designs with the Artist! App Lab Design an app, code with blocks or JavaScript to make it work, then share your app in seconds. Dance Party Featuring Katy Perry, Madonna, J. Balvin, Sia, Keith Urban, Ciara, and 25 more! Dance Party Code a Dance Party to share with friends and family. Featuring Beyoncé, Harry Styles, Lizzo, Lil Nas X, Selena Gomez, music from Disney's "Encanto," and more! AI for Oceans Learn how AI and machine learning can be used to address world problems. Accelerated Course Ages 10-18 Learn basic computer science in an accelerated version of courses 2-4. Unplugged Lessons Ages 4+ If you don't have computers, try these unplugged lessons in your classroom. Course A (2023) Ages: 4-7 An introduction to computer science for pre-readers. Course B (2023) Ages: 5-8 An introduction to computer science for pre-readers. Similar to Course A, but with added concept depth. Course C (2023) Ages: 6-10 Learn the basics of computer science and create your own art, stories, and games. Course D (2023) Ages: 7-11 Learn about conditional statements. Create your own art, games, and even a dance party. Course E (2023) Ages: 8-12 Learn the basics of sprites, nested loops, and functions. Course F (2023) Ages: 9-13 Learn all the concepts in Computer Science Fundamentals and create your own art, story or game. Express Course (2023) Ages: 9-18 An introduction to computer science: combines the best of our elementary school curriculum for older students. Pre-reader Express (2023) Ages: 4-8 An introduction to computer science for pre-readers: combines the best of our kindergarten and first grade courses. 20 hour courses for Computer Science Fundamentals (all ages) Privacy Policy | Cookie Notice | Volunteer to translate our content | Help and support | Store | Terms Engineers from Amazon, Google, and Microsoft helped create these materials. Minecraft™ © 2024 Microsoft. All Rights Reserved. Star Wars™ © 2024 Disney and Lucasfilm. All Rights Reserved. Frozen™ © 2024 Disney. All Rights Reserved. Ice Age™ © 2024 20th Century Fox. All Rights Reserved. Angry Birds™ © 2009-2024 Rovio Entertainment Ltd. All Rights Reserved. Plants vs. Zombies™ © 2024 Electronic Arts Inc. All Rights Reserved. DreamWorks The Bad Guys © 2024 DreamWorks Animation LLC. All Rights Reserved. © Code.org, 2024. Code.org®, the CODE logo, Hour of Code® and CS Discoveries® are trademarks of Code.org. Built on GitHub from Microsoft العربية Azərbaycan dili български Bosanski Català Čeština Dansk Deutsch Ελληνικά English Español (España) Español (Latinoamérica) Eesti Euskara فارسی Suomi Filipino Français Gaeilge Galego עברית हिन्दी Hrvatski Magyar Հայերեն Bahasa Indonesia Íslenska Italiano 日本語 ქართული 한국어 Қазақша ភាសាខ្មែរ Кыргызча Lietuvių Latviešu Māori Монгол хэл मराठी ဗမာစာ Nederlands Norsk (Nynorsk) Norsk (Bokmål) Polski Português (Brasil) Português (Portugal) Română Русский Davvisámegiella සිංහල Slovenčina Slovenščina Sāmoa Shqip Српски Svenska தமிழ் తెలుగు ภาษาไทย Türkçe Українська Oʻzbekcha Tiếng Việt 简体字 繁體字 © Code.org, 2024