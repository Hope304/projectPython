TC39 - Specifying JavaScript. Skip to content TC39 Toggle sub-menu for TC39 Meeting Agendas Meeting Notes Specs Toggle sub-menu for specs Active Proposals ECMA-262, ECMAScript ECMA-402, Intl API ECMA-404, JSON ECMA-414, ECMAScript Specification Suite Contribute Toggle sub-menu for Contribute Contribute to Proposals Contribute to Tests Reading the Spec Join the Discourse State of Proposals Toggle sub-menu for Contribute English Deutsch 简体中文 日本語 Русский Français Specifying JavaScript. TC39 Ecma International's TC39 is a group of JavaScript developers, implementers, academics, and more, collaborating with the community to maintain and evolve the definition of JavaScript. We are part of Contribute TC39 welcomes contributions from the JavaScript community, whether it is feedback on existing proposals, improved documentation, testing, implementations, or even language feature ideas. See our contributor guide for details. To participate in TC39 meetings as a member, join Ecma. Specs We develop the JavaScript (formally, ECMAScript) specification on GitHub and meet every two months to discuss proposals. To learn more about the process, please take a look at the six stages for new language feature proposals. See our meeting agendas and minutes to learn more. State of Proposals Current Candidates for the Specification This section features proposals that are in Stage 3 of our process, which means they are close to completion. How to read the proposals list Each proposal has links out to other resources. The tags identify the following attributes. Below you will find a table with example tags and their meanings. All tags have hover text if you need help getting oriented. Types of tags and what they mean Last Presented: December 2018 Available Tests: Tests Specification Text: Specification Decorators Specification Authors: Daniel Ehrenberg, Kristen Hewell Garrett | Champion Kristen Hewell Garrett Decorators for ES6 classes Temporal Specification Authors and Champions: Philipp Dunkel, Maggie Johnson-Pint, Matt Johnson-Pint, Brian Terlson, Shane Carr, Ujjwal Sharma, Philip Chimento, Jason Williams, Justin Grant Provides standard objects and functions for working with dates and times. Intl.DurationFormat Specification Authors and Champions: Younies Mahmoud, Ujjwal Sharma Uint8Array to/from Base64 Specification Authors and Champions: Kevin Gibbons TC39 proposal for Uint8Array<->base64/hex New Set methods Specification Authors: Michał Wadas, Sathya Gunasekaran, Kevin Gibbons | Champion Kevin Gibbons Proposal for new Set methods in JS Import Attributes Specification Authors: Myles Borins, Sven Sauleau, Dan Clark, Daniel Ehrenberg | Champions: Sven Sauleau, Dan Clark, Daniel Ehrenberg, Nicolò Ribaudo Proposal for syntax to import ES modules with assertions Sync Iterator helpers Specification Author: Gus Caplan | Champions: Michael Ficarra, Jonathan Keslin, Kevin Gibbons Methods for working with iterators in ECMAScript Source Phase Imports Specification Author: Luca Casonato | Champions: Guy Bedford, Luca Casonato Proposal to enable importing modules at the source phase RegExp Modifiers Specification Authors and Champions: Ron Buckton Regular Expression Pattern Modifiers for ECMAScript Decorator Metadata Authors and Champions: Kristen Hewell Garrett Intl Locale Info Specification Authors and Champions: Frank Yung-Fong Tang An API to expose information of locale, such as week data ( first day of a week, weekend start, weekend end), hour cycle, measurement system, commonly used calendar, etc. JSON Modules Specification Authors and Champions: Myles Borins, Sven Sauleau, Dan Clark, Daniel Ehrenberg Proposal to import JSON files as modules Array.fromAsync Specification Authors and Champions: J.S. Choi Draft specification for a proposed Array.fromAsync method in JavaScript. Explicit Resource Management Specification Authors and Champions: Ron Buckton ECMAScript Explicit Resource Management Legacy RegExp features in JavaScript Author: Claude Pache | Champions: Mark Miller, Claude Pache Legacy static properties of the RegExp constructor in JavaScript JSON.parse source text access Specification Authors and Champions: Richard Gibson Proposal for extending JSON.parse to expose input source text. Float16 on TypedArrays, DataView, Math.f16round Specification Author: Leo Balter | Champions: Leo Balter, Kevin Gibbons a proposal to add float16 TypedArrays to JavaScript Duplicate named capture groups Authors and Champions: Kevin Gibbons TC39 proposal to allow regex capturing group names to be repeated See proposals in all stages Connect Discourse GitHub Mastodon Matrix Twitter Standards ECMA-262, ECMAScript ECMA-402, Intl API ECMA-404, JSON ECMA-414, ECMAScript Specification Suite Proposals Stage 0 Stage 1 Stage 2 Stage 2.7 Stage 3 Stage 4 Contribute Contribute to Proposals Contribute to Tests Reading the Spec We are looking for feedback. Please open an issue in our site repository. Archives Process Code of Conduct © Ecma International