CommonMark CommonMark A strongly defined, highly compatible specification of Markdown What is Markdown? It’s a plain text format for writing structured documents, based on formatting conventions from email and usenet. Learn Markdown in 60 Seconds Who created Markdown? It was developed in 2004 by John Gruber in collaboration with Aaron Swartz. Gruber wrote the first markdown-to-html converter in Perl, and it soon became widely used in websites. By 2014 there were dozens of implementations in many languages. Why is CommonMark needed? John Gruber’s canonical description of Markdown’s syntax does not specify the syntax unambiguously. In the absence of a spec, early implementers consulted the original Markdown.pl code to resolve these ambiguities. But Markdown.pl was quite buggy, and gave manifestly bad results in many cases, so it was not a satisfactory replacement for a spec. Markdown.pl was last updated December 17th, 2004. Because there is no unambiguous spec, implementations have diverged considerably over the last 10 years. As a result, users are often surprised to find that a document that renders one way on one system (say, a GitHub wiki) renders differently on another (say, converting to docbook using Pandoc). To make matters worse, because nothing in Markdown counts as a “syntax error,” the divergence often isn’t discovered right away. There’s no standard test suite for Markdown; MDTest is the closest thing we have. The only way to resolve Markdown ambiguities and inconsistencies is Babelmark, which compares the output of 20+ implementations of Markdown against each other to see if a consensus emerges. We propose a standard, unambiguous syntax specification for Markdown, along with a suite of comprehensive tests to validate Markdown implementations against this specification. We believe this is necessary, even essential, for the future of Markdown. That’s what we call CommonMark. Who are you today? We’re a group of Markdown fans continually working toward the vision of CommonMark — a standard, interoperable and testable version of Markdown. John MacFarlane, jgm@berkeley.edu Martin Woodward, martinwoodward@github.com Jeff Atwood, jatwood@codinghorror.com Who were you in 2014, when this started? We’re a group of Markdown fans who either work at companies with industrial scale deployments of Markdown, have written Markdown parsers, have extensive experience supporting Markdown with end users – or all of the above. John MacFarlane, of Pandoc David Greenspan, of Meteor Vicent Marti, of GitHub Neil Williams, of Reddit Benjamin Dumke-von der Ehe, of Stack Overflow / Stack Exchange Jeff Atwood, of Discourse How can I help? Exercise our reference implementations, or find a community implementation in your preferred environment or language. Provide feedback! If a CommonMark implementation does not already exist in your preferred environment or language, try implementing your own CommonMark parser. One of our major goals is to strongly specify Markdown, and to eliminate the many old inconsistencies and ambiguities that made using Markdown so difficult. Did we succeed? Where can I find it? spec.commonmark.org The CommonMark specification. code.commonmark.org Reference implementation and validation test suite on GitHub. talk.commonmark.org Public discussion area and mailing list via Discourse. commonmark.org/help Quick reference card and interactive tutorial for learning Markdown. spec.commonmark.org/dingus/ Live testing tool powered by the reference implementation. When is the spec final? The current version of the CommonMark spec is quite robust after many years of public feedback. There are currently CommonMark implementations for dozens of programming languages, and the following sites and projects have adopted CommonMark: Discourse GitHub GitLab Reddit Qt Stack Overflow / Stack Exchange Swift <3