LodashLodashLodashA modern JavaScript utility library delivering modularity, performance & extras.Documentation FP Guide_.defaults({ 'a': 1 }, { 'a': 3, 'b': 2 });// → { 'a': 1, 'b': 2 }_.partition([1, 2, 3, 4], n => n % 2);// → [[1, 3], [2, 4]]DownloadCore build (~4kB gzipped)Full build (~24kB gzipped)CDN copiesLodash is released under the MIT license & supports modern environments. Review the build differences & pick one that’s right for you.InstallationIn a browser:<script src="lodash.js"></script>Using npm:$ npm i -g npm$ npm i --save lodashIn Node.js:// Load the full build.var _ = require('lodash');// Load the core build.var _ = require('lodash/core');// Load the FP build for immutable auto-curried iteratee-first data-last methods.var fp = require('lodash/fp'); // Load method categories.var array = require('lodash/array');var object = require('lodash/fp/object'); // Cherry-pick methods for smaller browserify/rollup/webpack bundles.var at = require('lodash/at');var curryN = require('lodash/fp/curryN');Note:Install n_ for Lodash use in the Node.js < 6 REPL.Why Lodash?Lodash makes JavaScript easier by taking the hassle out of working with arrays, numbers, objects, strings, etc. Lodash’s modular methods are great for:Iterating arrays, objects, & stringsManipulating & testing valuesCreating composite functionsModule FormatsLodash is available in a variety of builds & module formats.lodash & per method packageslodash-es, babel-plugin-lodash, & lodash-webpack-pluginlodash/fplodash-amdComplementary Toolsfutil-js is a set of functional utilities designed to complement lodashFurther ReadingContributingRelease NotesWiki (Changelog, Roadmap, etc.)SupportTested in Chrome 74-75, Firefox 66-67, IE 11, Edge 18, Safari 11-12, & Node.js 8-12.Site made with by @veksenn & @zthall.Maintained by the core team with help from our contributors.