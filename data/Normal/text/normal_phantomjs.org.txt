PhantomJS - Scriptable Headless Browser PhantomJS - Scriptable Headless Browser Important: PhantomJS development is suspended until further notice (more details). PhantomJS is a headless web browser scriptable with JavaScript. It runs on Windows, macOS, Linux, and FreeBSD. Using QtWebKit as the back-end, it offers fast and native support for various web standards: DOM handling, CSS selector, JSON, Canvas, and SVG. The following simple script for PhantomJS loads Google homepage, waits a bit, and then captures it to an image. var page = require('webpage').create(); page.open('http://www.google.com', function() { setTimeout(function() { page.render('google.png'); phantom.exit(); }, 200); }); PhantomJS is an optimal solution for: Page automation Access webpages and extract information using the standard DOM API, or with usual libraries like jQuery. Screen capture Programmatically capture web contents, including SVG and Canvas. Create web site screenshots with thumbnail preview. Headless website testing Run functional tests with frameworks such as Jasmine, QUnit, Mocha, WebDriver, etc. Network monitoring Monitor page loading and export as standard HAR files. Automate performance analysis using YSlow and Jenkins. Ready to play with PhantomJS? Install and follow the Quick Start guide. Want to learn more? Read the FAQ, explore more examples, and study the complete API documentation. For the source code, issue tracker, and other development information, visit github.com/ariya/phantomjs. Â© 2010-2018 PhantomJS contributors. Distributed under the BSD license (SPDX: BSD-3-Clause).